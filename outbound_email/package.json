{
	"name": "outbound-email",
	"version": "15.3.2",
	"dependencies": {
		"@sendgrid/mail": "8.1.1",
		"amqplib": "0.10.3",
		"async": "2.6.4",
		"aws-sdk": "2.1514.0",
		"deep-equal": "2.2.3",
		"highlight.js": "11.9.0",
		"hjson": "3.2.2",
		"jsonwebtoken": "9.0.2",
		"juice": "8.0.0",
		"markdown-it": "12.3.2",
		"markdown-it-emoji-mart": "0.1.1",
		"markdown-it-slack": "1.2.0",
		"moment-timezone": "0.5.43",
		"mongodb": "4.17.0",
		"newrelic": "11.6.1",
		"node-fetch": "2.6.7",
		"node-vault": "0.10.2",
		"nodemailer": "6.9.9",
		"pino": "8.16.2",
		"pubnub": "7.4.5",
		"socketcluster-client": "16.0.4",
		"strftime": "0.10.2",
		"tiny-async-pool": "1.3.0",
		"uuid": "8.3.2"
	},
	"scripts": {
		"eslint": "eslint ./src",
		"clean": "([ -d $CS_OUTBOUND_EMAIL_TOP/dist ] && /bin/rm -rf $CS_OUTBOUND_EMAIL_TOP/dist || /bin/echo -n) && (git clean -Xdf)",
		"_make_dist_dir": "[ ! -d $CS_OUTBOUND_EMAIL_TOP/dist ] && mkdir $CS_OUTBOUND_EMAIL_TOP/dist || /bin/echo -n",
		"_copy_cfg_file": "cp $CSSVC_CFG_FILE codestream-services-config.json",
		"pack": "npm run _make_dist_dir; cp -rp $CSSVC_BACKEND_ROOT/shared src && npm run _copy_cfg_file && zip --quiet -r $CS_OUTBOUND_EMAIL_TOP/dist/outbound-email.zip node_modules src package.json package-lock.json codestream-services-config.json && /bin/rm -rf src/shared",
		"repack": "cd $CS_OUTBOUND_EMAIL_REPACK_DIR && npm run pack",
		"pack_without_config": "npm run _make_dist_dir; zip --quiet -r $CS_OUTBOUND_EMAIL_TOP/dist/outbound-email.zip node_modules src package.json package-lock.json bin sandbox",
		"build": "npm run pack",
		"lambda:config": ". $CS_OUTBOUND_EMAIL_TOP/sandbox/lambda-configs/lambda-defaults.sh && npm run _make_dist_dir; create-file-from-template.py -t ./sandbox/lambda-configs/$CS_OUTBOUND_EMAIL_LAMBDA_TEMPLATE -o $CS_OUTBOUND_EMAIL_TOP/dist/outbound-email.lambda.json -j --kvpair ALL_ENV_VARS_PAIRS_STRING:CS_OUTBOUND_EMAIL_",
		"lambda:install_func": "aws lambda create-function --cli-input-json file://$CS_OUTBOUND_EMAIL_TOP/dist/outbound-email.lambda.json --zip-file fileb://$CS_OUTBOUND_EMAIL_TOP/dist/outbound-email.zip",
		"lambda:install_trigger": ". $CS_OUTBOUND_EMAIL_TOP/sandbox/lambda-configs/lambda-defaults.sh && aws lambda create-event-source-mapping --function-name $CS_OUTBOUND_EMAIL_SQS --enabled --event-source-arn $CS_OUTBOUND_EMAIL_SQS_ARN",
		"lambda:update_code": "aws lambda update-function-code --function-name $CS_OUTBOUND_EMAIL_SQS --zip-file fileb://$CS_OUTBOUND_EMAIL_TOP/dist/outbound-email.zip",
		"lambda:config_env": ". $CS_OUTBOUND_EMAIL_TOP/sandbox/lambda-configs/lambda-defaults.sh && get-json-property -j $CS_OUTBOUND_EMAIL_TOP/dist/outbound-email.lambda.json -p Environment >$CS_OUTBOUND_EMAIL_TOP/dist/outbound-email.lambda-environment.json",
		"lambda:update_env": "npm run lambda:config_env && aws lambda update-function-configuration --function-name $CS_OUTBOUND_EMAIL_SQS --environment file://$CS_OUTBOUND_EMAIL_TOP/dist/outbound-email.lambda-environment.json",
		"lambda:install": "npm run lambda:install_func && npm run lambda:install_trigger",
		"lambda:uninstall": "dt-aws-lambda -a delete-triggers --func-name $CS_OUTBOUND_EMAIL_SQS && aws lambda delete-function --function-name $CS_OUTBOUND_EMAIL_SQS",
		"reupdate": "npm run build && npm run lambda:update_code",
		"docker:build": "cd .. && dt-docker-build -a build -D outbound_email/sandbox/docker/mailout-onprem -V 0.0.0"
	},
	"pre-commit": [
		"eslint"
	],
	"devDependencies": {
		"eslint": "8.55.0",
		"lambda-local": "2.1.2",
		"nodemon": "2.0.20",
		"pre-commit": "1.2.2",
		"snyk": "1.1260.0"
	},
	"overrides": {
		"nodemon@2.0.18": {
			"update-notifier": "6.0.0"
		},
		"degenerator@3.0.1": {
			"vm2": "3.9.18"
		},
		"degenerator@3.0.2": {
			"vm2": "3.9.18"
		}
	}
}
